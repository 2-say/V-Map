package ParkLab.VMap.model.Service.notion;

import ParkLab.VMap.model.Service.DecodeJson.DecordJsonService;
import ParkLab.VMap.model.Service.firebase.FirebaseServiceImpl;
import ParkLab.VMap.model.data.Users;
import org.json.JSONObject;
import org.springframework.http.*;
import org.springframework.web.client.RestTemplate;

import java.io.File;
import java.io.IOException;
import java.util.List;


//ÎÇòÏ§ë ÏöîÏ≤≠ÏùÑ ÏúÑÌï¥ÏÑú ÎßåÎì† ÏûÖÍµ¨(Ïª®Ìä∏Î°§Îü¨)
//Test.class Ï≤òÎüº Îç∞Ïù¥ÌÑ∞Î•º ÎÑòÍ≤®Ï£ºÎ©¥ post ÏûëÎèô Í∞ÄÎä•

public class NotionWriterServiceImpl {
    private BlockWrite blockWrite = new BlockWrite();
    private NotionApi notionApi = new NotionApi();
    private final RestTemplate restTemplate = new RestTemplate();
    FirebaseServiceImpl firebaseServiceImpl = new FirebaseServiceImpl();
    ResponseEntity<String> responseEntity;
    public String postNotion(String documentId, String requestBody) throws Exception {
        String url = "https://api.notion.com/v1/pages/";
        DecordJsonService decodeJsonService = new DecordJsonService(requestBody);
        Users users = firebaseServiceImpl.getData(documentId);
        String accessToken = users.getAccessToken();
        String databaseId = users.getDataBaseId();


        String meetingName = decodeJsonService.getMeetingName();   //ÌôîÏùò Ï†úÎ™©
        String startTime = decodeJsonService.getStartTime();       //ÌöåÏùò ÏãúÏûë ÏãúÍ∞Ñ
        List<String> meetingParticipants = decodeJsonService.getMeetingParticipants();
        String participantsString = String.join(" ", meetingParticipants);   //ÌöåÏùò Ï∞∏Í∞ÄÏûê



        String jsonString = "{\n" +
                "  \"parent\": {\n" +
                "    \"database_id\": \"" + databaseId + "\"\n" +
                "  },\n" +
                "  \"properties\": {\n" +
                "    \"Ïú†Ìòï\": {\n" +
                "      \"select\": {\n" +
                "        \"name\": \"ÌöåÏùò\"\n" +
                "      }\n" +
                "    },\n" +
                "    \"Ïù¥Î¶Ñ\": {\n" +
                "      \"title\": [\n" +
                "        {\n" +
                "          \"text\": {\n" +
                "            \"content\": \"" + meetingName + "\"\n" +
                "          }\n" +
                "        }\n" +
                "      ]\n" +
                "    },\n" +
                "    \"Ïù¥Î≤§Ìä∏ ÏãúÍ∞Ñ\": {\n" +
                "      \"type\": \"date\",\n" +
                "      \"date\": {\n" +
                "        \"start\": \"" + startTime + "\"\n" +
                "      }\n" +
                "    }\n" +
                "  },\n" +
                "  \"children\": [\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_2\",\n" +
                "      \"heading_2\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"ÌöåÏùò Ï†úÎ™©: " + meetingName + "\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"callout\",\n" +
                "      \"callout\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"ÏöîÏïΩ:\"\n" +
                "            }\n" +
                "          }\n" +
                "        ],\n" +
                "        \"icon\": {\n" +
                "          \"type\": \"emoji\",\n" +
                "          \"emoji\": \"üí¨\"\n" +
                "        },\n" +
                "        \"color\": \"yellow_background\"\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"paragraph\",\n" +
                "      \"paragraph\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_3\",\n" +
                "      \"heading_3\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"üë®üèª‚Äçüíª ÌöåÏùò Ï∞∏ÏÑùÏûê\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"divider\",\n" +
                "      \"divider\": {}\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"paragraph\",\n" +
                "      \"paragraph\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"" + participantsString + "\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_3\",\n" +
                "      \"heading_3\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\nüìö ÌöåÏùò ÏöîÏïΩ\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"divider\",\n" +
                "      \"divider\": {}\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"paragraph\",\n" +
                "      \"paragraph\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\n\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_3\",\n" +
                "      \"heading_3\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\nüì£ ÌöåÏùò ÏïàÍ±¥\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"divider\",\n" +
                "      \"divider\": {}\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"numbered_list_item\",\n" +
                "      \"numbered_list_item\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"numbered_list_item\",\n" +
                "      \"numbered_list_item\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"1\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"paragraph\",\n" +
                "      \"paragraph\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\n\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_3\",\n" +
                "      \"heading_3\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"‚úÖ To Do List\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"to_do\",\n" +
                "      \"to_do\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"TO DO: 1\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"to_do\",\n" +
                "      \"to_do\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"TO DO: 2\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"to_do\",\n" +
                "      \"to_do\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"TO DO: 3\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"to_do\",\n" +
                "      \"to_do\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"TO DO: 4\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"paragraph\",\n" +
                "      \"paragraph\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\n\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_3\",\n" +
                "      \"heading_3\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"(Ï∂îÍ∞Ä):\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"quote\",\n" +
                "      \"quote\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"Ï∂îÍ∞Ä(?)\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"paragraph\",\n" +
                "      \"paragraph\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"\\n\\n\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"heading_2\",\n" +
                "      \"heading_2\": {\n" +
                "        \"rich_text\": [\n" +
                "          {\n" +
                "            \"type\": \"text\",\n" +
                "            \"text\": {\n" +
                "              \"content\": \"üßæ ÌöåÏùò ÎåÄÎ≥∏:\"\n" +
                "            }\n" +
                "          }\n" +
                "        ]\n" +
                "      }\n" +
                "    },\n" +
                "    {\n" +
                "      \"object\": \"block\",\n" +
                "      \"type\": \"divider\",\n" +
                "      \"divider\": {}\n" +
                "    }\n" +
                "  ]\n" +
                "}";




        // HTTP ÏöîÏ≤≠ Ìó§ÎçîÎ•º ÏÑ§Ï†ïÌï©ÎãàÎã§.
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        headers.set("Notion-Version", "2021-08-16");
        headers.set("Authorization", "Bearer " + accessToken);

        // HTTP ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞Î•º ÏÑ§Ï†ïÌï©ÎãàÎã§.
        HttpEntity<String> requestEntity = new HttpEntity<>(jsonString, headers);

        // HTTP POST ÏöîÏ≤≠ÏùÑ Î≥¥ÎÉÖÎãàÎã§.
        responseEntity = restTemplate.exchange(url, HttpMethod.POST, requestEntity, String.class);
        System.out.println("responseEntity = " + responseEntity);

        // HTTP ÏùëÎãµ Í≤∞Í≥ºÎ•º ÌôïÏù∏Ìï©ÎãàÎã§.
        if (responseEntity.getStatusCode() == HttpStatus.OK) {
            System.out.println("Î∏îÎ°ù ÏûëÏÑ± ÏÑ±Í≥µ!");
        } else {
            System.out.println("Î∏îÎ°ù ÏûëÏÑ± Ïã§Ìå®!");
        }
        JSONObject jsonForPageId = new JSONObject(responseEntity.getBody());
        String pageId = jsonForPageId.getString("id");
        createTxtFile(pageId);
        return pageId;
    }









//    public String postNotion(String documentId, String requestBody) throws Exception {
//        DecordJsonService decodeJsonService = new DecordJsonService(requestBody);
//
//        List<BlockData> contents = new ArrayList<>();
//        String meetingName = decodeJsonService.getMeetingName();
//        String startTime = decodeJsonService.getStartTime();
//
//        List<String> meetingParticipants = decodeJsonService.getMeetingParticipants();
//        String participantsString = String.join(" ", meetingParticipants);
//
//
//        contents.add(new BlockData(" :", BlockType.HEADING_2));
//        contents.add(new BlockData(meetingName, BlockType.CALLOUT));
//
//        contents.add(new BlockData("ÌöåÏùò Ï∞∏ÏÑùÏûê", BlockType.HEADING_1));
//        contents.add(new BlockData(participantsString, BlockType.PARAGRAPH));
//
//        contents.add(new BlockData("ÌöåÏùò ÏãúÍ∞Ñ", BlockType.HEADING_1));
//        contents.add(new BlockData(startTime, BlockType.PARAGRAPH));
//
//
//        String JsonContentBlock = blockWrite.BlockWrite(contents);
//
//        //notionApi -> pageId Í∞í Î∞õÏïÑÏò§Í∏∞ (txtÌååÏùºÏùÑ ÎßåÎì§ Îïå ÌïÑÏöî)
//        String responseString = notionApi.postToNotion(documentId, JsonContentBlock, requestBody);
//        ObjectMapper objectMapper = new ObjectMapper();
//        Map<String, String> responseMap = objectMapper.readValue(responseString, new TypeReference<Map<String,String>>(){});
//        String pageIdString = responseMap.get("pageId");
//
//        //txtÌååÏùº ÏÉùÏÑ±
//        createTxtFile(pageIdString);
//
//        return pageIdString;
//    }

    private void createTxtFile(String pageId) throws IOException {
        String directoryPath = "/home/VMap/data/";
        String fileName = pageId + ".txt";
        File directory = new File(directoryPath);
        File file = new File(directoryPath + fileName);

        if (!directory.exists()) {
            directory.mkdirs(); // create directory if it does not exist
        }

        if (!file.exists()) {
            file.createNewFile();
        }

        System.out.println("Txt file created successfully!");
    }










}



//        contents.add(new BlockData("ÌöåÏùòÎäî ÌöåÏÇ¨Ïùò ÏßÄÎÇú Î∂ÑÍ∏∞ Ïã§Ï†ÅÍ≥º Îã§Ïùå Î∂ÑÍ∏∞ Í≥ÑÌöçÏóê ÎåÄÌï¥ Ïù¥ÏïºÍ∏∞ÎêòÏóàÏúºÎ©∞, ÏÉàÎ°úÏö¥ Ï†úÌíà " +
//                "Ï∂úÏãúÏôÄ Ìï¥Ïô∏ ÏãúÏû• Í∞úÏ≤ô, Ïù∏Î†• ÌôïÎ≥¥ÏôÄ ÏóÖÎ¨¥ ÌîÑÎ°úÏÑ∏Ïä§ Í∞úÏÑ†Ïù¥ ÌïµÏã¨ ÏïàÍ±¥ÏúºÎ°ú ÎÖºÏùòÎêòÏóàÎã§.", BlockType.PARAGRAPH));
//        contents.add(new BlockData("ÌöåÏùò Ï∞∏ÏÑùÏûê", BlockType.HEADING_1));
//        contents.add(new BlockData("Ïù¥ÏÑ∏Ìù¨,ÏûÑÏû¨Í≤Ω,Ïù¥ÏÉÅÌòÑ,Ï°∞ÏõêÌù¨", BlockType.PARAGRAPH));
//
//        contents.add(new BlockData("\\n  :", BlockType.HEADING_2));
//        contents.add(new BlockData("ÌöåÏÇ¨Ïùò Ïù¥Î≤à Î∂ÑÍ∏∞ Ïã§Ï†ÅÍ≥º Îã§Ïùå Î∂ÑÍ∏∞ Í≥ÑÌöçÏóê ÎåÄÌïú ÎÖºÏùò", BlockType.CALLOUT));
//
//
//        contents.add(new BlockData("\\n ÌöåÏùò ÏöîÏïΩ : ", BlockType.HEADING_3));
//        contents.add(new BlockData("ÌöåÏùòÎäî ÌöåÏÇ¨Ïùò ÏßÄÎÇú Î∂ÑÍ∏∞ Ïã§Ï†ÅÍ≥º Îã§Ïùå Î∂ÑÍ∏∞ Í≥ÑÌöçÏóê ÎåÄÌï¥ Ïù¥ÏïºÍ∏∞ÎêòÏóàÏúºÎ©∞, ÏÉàÎ°úÏö¥ Ï†úÌíà " +
//                "Ï∂úÏãúÏôÄ Ìï¥Ïô∏ ÏãúÏû• Í∞úÏ≤ô, Ïù∏Î†• ÌôïÎ≥¥ÏôÄ ÏóÖÎ¨¥ ÌîÑÎ°úÏÑ∏Ïä§ Í∞úÏÑ†Ïù¥ ÌïµÏã¨ ÏïàÍ±¥ÏúºÎ°ú ÎÖºÏùòÎêòÏóàÎã§.", BlockType.PARAGRAPH));
//
//        contents.add(new BlockData("\\n ÌöåÏùò ÏïàÍ±¥ :", BlockType.HEADING_3));
//        contents.add(new BlockData("Ïù¥Î≤à Î∂ÑÍ∏∞ Ïã§Ï†ÅÍ≥º Îã§Ïùå Î∂ÑÍ∏∞ Í≥ÑÌöç", BlockType.NUMBERED_LIST_ITEM));
//        contents.add(new BlockData("ÏÉàÎ°úÏö¥ Ï†úÌíà Ï∂úÏãúÏôÄ Ìï¥Ïô∏ ÏãúÏû• Í∞úÏ≤ô", BlockType.NUMBERED_LIST_ITEM));
//        contents.add(new BlockData("Ïù∏Î†• ÌôïÎ≥¥ÏôÄ ÏóÖÎ¨¥ ÌîÑÎ°úÏÑ∏Ïä§ Í∞úÏÑ†", BlockType.NUMBERED_LIST_ITEM));
//        contents.add(new BlockData("Ïù∏Î†• ÌôïÎ≥¥ÏôÄ ÏóÖÎ¨¥ ÌîÑÎ°úÏÑ∏Ïä§ Í∞úÏÑ†", BlockType.NUMBERED_LIST_ITEM));
//
//
//        contents.add(new BlockData(" \\n \\n ", BlockType.PARAGRAPH));
//        contents.add(new BlockData("Ìï¥Í≤∞Ìï¥ÏïºÌï† Î¨∏Ï†ú1 :  Î¨∏Ï†úÍ∞Ä Î¨¥ÏóáÏù∏Í∞Ä? ", BlockType.TO_DO));
//        contents.add(new BlockData("Ìï¥Í≤∞Ìï¥ÏïºÌï† Î¨∏Ï†ú2 :  Ï†ïÏã†Ïù¥ ÎÇòÍ∞àÍ≤É Í∞ôÏùÄÍ∞Ä? ", BlockType.TO_DO));
//
//
//        contents.add(new BlockData(" \\n \\n ", BlockType.PARAGRAPH));
//        contents.add(new BlockData("ÌöåÏû•Îãò ÏßÄÏãúÏÇ¨Ìï≠ :", BlockType.HEADING_3));
//        contents.add(new BlockData("Îã§Îì§ Î™®Îëê Í≥†ÏÉùÏù¥ ÎßéÏúºÎ©∞ ÌöåÏÇ¨Ïùò Ï†ïÏã†ÏùÑ Ïù¥ÎÅåÏñ¥ÏÑú V-MAP Ïñ¥ÌîåÎ¶¨ÏºÄÏù¥ÏÖò " +
//                "ÏôÑÏÑ±ÏùÑ ÏúÑÌï¥ÏÑú ÏïºÍ∑ºÏùÄ Í∏∞Î≥∏Ïù¥Î©∞, ÏõîÍ∏âÏùÄ ÏÉùÍ∞ÅÌïòÏßÄÎèÑ ÎßêÍ≥† Ïó¥Ïã¨Ìûà ÏùºÌï¥Ï£ºÍ∏∏ Î∞îÎûÄÎã§. Î™®Îëê " +
//                "MZÍ∞ôÏùÄ ÏÉùÍ∞ÅÏùÄ Î≤ÑÎ¶¨Í≥† ÎÅàÍ∏∞Î•º Í∞ÄÏßÄÍ≥† Ïó¥Ïã¨Ìûà ÏïºÍ∑º ÏßÑÌñâÌïòÎèÑÎ°ù . Ïù¥Îßå. ", BlockType.QUOTE));
//
//
//
//
//        contents.add(new BlockData("\\n \\n \\n \\n ", BlockType.PARAGRAPH));
//
//
//
//        contents.add(new BlockData("-----------", BlockType.PARAGRAPH));
//        contents.add(new BlockData("ÌöåÏùò ÎåÄÎ≥∏ :", BlockType.HEADING_2));